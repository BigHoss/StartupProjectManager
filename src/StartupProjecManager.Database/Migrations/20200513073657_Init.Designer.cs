// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StartupProjectManager.Database.Data;

namespace StartupProjectManager.Database.Migrations
{
    [DbContext(typeof(StartupProjectManagerContext))]
    [Migration("20200513073657_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("StartupProjectManager.Database.Model.ProjectItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NewProperty")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentProjectItemId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("ParentProjectItemId");

                    b.ToTable("ProjectItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "Rku",
                            CreatedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            ItemTypeId = 1,
                            ModifiedBy = "Rku",
                            ModifiedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            Name = "Root"
                        });
                });

            modelBuilder.Entity("StartupProjectManager.Database.Model.ProjectItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Icon")
                        .HasColumnType("BLOB");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProjectItemTypes");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedBy = "Rku",
                            CreatedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            ModifiedBy = "Rku",
                            ModifiedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            Name = "Application"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "Rku",
                            CreatedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            ModifiedBy = "Rku",
                            ModifiedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            Name = "Document"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "Rku",
                            CreatedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            ModifiedBy = "Rku",
                            ModifiedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            Name = "New"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "Rku",
                            CreatedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            ModifiedBy = "Rku",
                            ModifiedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            Name = "Project"
                        },
                        new
                        {
                            Id = 1,
                            CreatedBy = "Rku",
                            CreatedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            ModifiedBy = "Rku",
                            ModifiedOn = new DateTime(2020, 5, 13, 7, 36, 57, 389, DateTimeKind.Utc).AddTicks(5053),
                            Name = "Root"
                        });
                });

            modelBuilder.Entity("StartupProjectManager.Database.Model.ProjectItem", b =>
                {
                    b.HasOne("StartupProjectManager.Database.Model.ProjectItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StartupProjectManager.Database.Model.ProjectItem", "ParentProjectItem")
                        .WithMany("ChildProjectItems")
                        .HasForeignKey("ParentProjectItemId");
                });
#pragma warning restore 612, 618
        }
    }
}
